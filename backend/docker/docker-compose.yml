services:
  postgresql_users:
    container_name: users_postgres_service
    image: postgres:latest
    env_file:
      - ../env/users_postgres.env
    ports:
      - "5432:5432"
    volumes:
      - ../database_data/users_data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER" #-p $$POSTGRES_PASSWORD"
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - app_network


  postgresql_integration:
    container_name: integration_postgres_service
    image: postgres:latest
    env_file:
      - ../env/integration_postgres.env
    ports:
      - "5433:5433"
    volumes:
      - ../database_data/integration_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - app_network
    command: [ "postgres", "-c", "port=5433" ]

  user_service:
    container_name: user_service
    build:
      context: ..
      dockerfile: ../backend/cmd/user/Dockerfile
    ports:
      - "8080:8080"
    networks:
      - app_network
    restart: unless-stopped
    env_file:
      - ../env/user.env
    healthcheck:
      test: [ "CMD", "nc -z localhost 8080 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      postgresql_users:
        condition: service_healthy

  nginx_service:
    image: nginx:latest
    container_name: nginx_service
    restart: always
    build:
      context: ..
      dockerfile: ../backend/cmd/nginx/Dockerfile
    volumes:
      - ../cmd/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - postgresql_users
      - postgresql_integration
      - user_service
    healthcheck:
      test: [ "CMD", "nginx", "-t" ]
      interval: 10s
      retries: 5
      start_period: 15s
      timeout: 5s
    networks:
      - app_network

  gateway_service:
    container_name: gateway
    build:
      context: ..
      dockerfile: ../backend/cmd/gateway/Dockerfile
    ports:
      - "5555:5555"
    networks:
      - app_network


networks:
  app_network:
    driver: bridge